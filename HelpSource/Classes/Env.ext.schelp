INSTANCEMETHODS::


method:: asPairsArray
Export an Env to breakpoint envelope array [x1, y1, x2, y2....]. x represents timeline and y represents levels.
	returns:: An Array


subsection:: Analyse and mathematics

method:: **
Multiply the value of two FLAT envelopes

method:: *
Multiply the value of the envelope by a number

method:: ++
Concatenate two envelopes

method:: removeDups
Remove duplicated nodes in an Env

method:: peakTime
	returns:: A list of time stamp when the Env reaches a peak.

method:: peakAmp
	returns:: A list of peak values in an Env

method:: integral
Integrating under an envelope for only flat multi breakpoint linear envelopes, no curved, sine or others. If the integral time is more than the duration of the envelope, output the integral of the whole envelope.
	argument:: time
		The value of x axies(time) of an envelop to calculate the area below the envelop from start to this time.

method:: reciprocal
	returns:: An Env with Y values being reciprocal of the original one.  NOTICE: it will fail if a 0 is in the value of the envelope.






subsection:: Composition stratgies

method:: subEnv
Generate one section of an envelope based on given starting point and duration.
	argument:: from
		starting time within the original envelope.
	argument:: dur
		duration of the sub-envelope.

method:: invert
	returns:: A inverted Env

method:: reverse
	returns:: A reversed Env

method:: normalize
Same as .range
	argument:: max
		Maximum value for normalization, same as .range(0, max)

method:: segment
Segment an envelope into several sub-envelops with crossfade in between each envelope
	argument:: numSegs
		How many segments to cut
	argument:: crossfade
		The time for crossfading inbetween sub envelopes.
	argument:: strategy
		The strategy on where to cut the envelop, available strages are:
		\atpeak:  Cut the envelope based on the peak time of the envelope, random time will be choosen if segmenting more than peak points was required.
		\geo: Geometric series
		\exp: Exponential
		\random:  Cut on random time
	returns:: An array of arrays including the envelope and wait time for Rutine yield. [[Env, time], [Env, time]]
